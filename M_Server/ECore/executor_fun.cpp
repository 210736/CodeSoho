//-----------------------------------------------------------------------------
// File: executor_fun.cpp
// Desc: 基于函数的线程执行体，针对于某个类要将它里面的多个成员函数封装成线程函数所用
//       它接收某个CallbackBase指针作为线程函数，同时提供一个CallBackBase留作OnShutSown调用
//       CallbackBase是对某个对象的成员函数的封装，用于执行
// Auth: Aslan
// Date: 2009-12-09
// Last: 2009-12-09
//-----------------------------------------------------------------------------
#include "stdafx.h"
#include "callback.h"
#include "executor_fun.h"

namespace ECore{

//-----------------------------------------------------------------------------
// 构造函数
//-----------------------------------------------------------------------------
ExecutorFun::ExecutorFun(CallbackBase* pExec, CallbackBase* pEnd) : Executor(), m_pExec(pExec), m_pEnd(pEnd) 
{

}

//-----------------------------------------------------------------------------
// 析构函数
//-----------------------------------------------------------------------------
ExecutorFun::~ExecutorFun()
{
	SAFE_DEL(m_pExec);
	SAFE_DEL(m_pEnd);
}

//-----------------------------------------------------------------------------
// 运行接口函数
//-----------------------------------------------------------------------------
VOID ExecutorFun::Run()
{
	m_pExec->Execute();
}

//-----------------------------------------------------------------------------
// 退出接口
//-----------------------------------------------------------------------------
VOID ExecutorFun::OnShutDown()
{
	if( VALID(m_pEnd) )
		m_pEnd->Execute();
}


} // namespace ECore{